// https://leetcode.com/problems/2-keys-keyboard/description/
// D[n][m] = min{D[n-m][n-m],D[n-m][m]} 其中 n-m>0
#include <iostream>
#include <vector>
using namespace std;

void printArray(vector<vector<int> > &arr,int m,int n) {
    std::cout << std::endl;
    std::cout << "---------------------arr-------------------" << std::endl;
    for (int i=0;i<m;i++) {
        for (int j=0;j<n;j++) {
            std::cout << arr[i][j] << " ";
        }
        std::cout << std::endl;
    }
    std::cout << "------------------------------------------" << std::endl;
    std::cout << std::endl;
}

int _min(int a,int b) {
    return a<b?a:b;
}

int minSteps(int n) {
    int m = n / 2;
    vector< vector<int> > D(n+1,vector<int>(m+1,0));
    D[1][1] = 1;
    for (int i=1;i<=n;i++) {
        for (int j=1;j<=i/2;j++) {
            printf("i:%d,j:%d\n",i,j);
            D[i][j] = D[i-j][j]+1;
            if (i==j*2) {
                D[i][j] = _min(D[i-j][i-j]+1,D[i-j][j])+1;
            }
        }
    }

    int min = n-1;
    for (int i=1;i<=m;i++) {
        min = _min(D[n][i],min);
    }

    printArray(D,n+1,m+1);
    
    return min;
}

int main() {
    int n = 4;

    minSteps(n);
}
